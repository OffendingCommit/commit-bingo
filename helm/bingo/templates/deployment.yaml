apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "bingo.fullname" . }}
  labels:
    {{- include "bingo.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "bingo.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "bingo.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "bingo.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.persistence.enabled }}
      initContainers:
        - name: init-data
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/bin/sh", "-c"]
          args:
            - |
              # Initialize phrases.txt if it doesn't exist
              if [ ! -f /data/phrases/phrases.txt ]; then
                cp /app/phrases.txt /data/phrases/phrases.txt
              fi
              # Initialize static files if directory is empty
              if [ ! -d /data/static ] || [ -z "$(ls -A /data/static)" ]; then
                mkdir -p /data/static
                cp -r /app/static/* /data/static/
              fi
          volumeMounts:
            - name: phrases-volume
              mountPath: /data/phrases
            - name: static-volume
              mountPath: /data/static
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: BUILD_ENVIRONMENT
              value: {{ .Values.env.BUILD_ENVIRONMENT }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            {{- if .Values.persistence.enabled }}
            - name: phrases-volume
              mountPath: {{ .Values.persistence.phrasesPath }}
              subPath: phrases.txt
            - name: static-volume
              mountPath: {{ .Values.persistence.staticPath }}
            {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        {{- if .Values.persistence.enabled }}
        - name: phrases-volume
          persistentVolumeClaim:
            claimName: {{ include "bingo.fullname" . }}-phrases
        - name: static-volume
          persistentVolumeClaim:
            claimName: {{ include "bingo.fullname" . }}-static
        {{- end }} 